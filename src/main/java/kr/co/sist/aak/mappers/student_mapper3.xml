<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sist.aak.student3">

	<!-- 강의 리스트 -->
	<!-- <select id="selectAllUserLecture" resultType="UserLectureDomain">
		select SUB_CODE,
		STATUS, IMAGE, SUB_TITLE, CAT_CODE, INST_ID
		from ( select
		s.SUB_CODE,s.STATUS,s.IMAGE,sc.SUB_TITLE,sc.CAT_CODE,si.INST_ID
		from
		SUBJECT s, SUBJECT_CODE sc, SUB_INSTRUCTOR si
		where
		(s.SUB_CODE=sc.SUB_CODE and s.SUB_CODE=si.SUB_CODE)
		)
	</select> -->
	<select id="selectAllUserLecture" resultType="UserLectureDomain">
		select
	s.SUB_CODE,s.STATUS,s.IMAGE,sc.SUB_TITLE,sc.CAT_CODE,si.INST_ID,(
	select count(*) as cnt
	from STD_SUBJECT
	where sub_code=s.sub_code ) cnt
	from
	SUBJECT s, SUBJECT_CODE sc, SUB_INSTRUCTOR si
	where
	(s.SUB_CODE=sc.SUB_CODE and s.SUB_CODE=si.SUB_CODE)
	and s.sub_code in (select sub_code
	from (select SUB_CODE,count(*) as cnt
	from STD_SUBJECT
	group by sub_code
	)
	)
	</select>

	<!-- 강의 상세 -->
	<select id="selectOneUserLecture" resultType="UserLectureDomain" parameterType="String">
		select SUB_CODE, STATUS, IMAGE, SUB_TITLE, CAT_CODE,
		INST_ID, INTRO,
		GOAL, TOTAL_NO, TOTAL_TIME, CREATE_DATE, COMP_TIME
		from
		(
		select s.SUB_CODE, s.STATUS, s.IMAGE, sc.SUB_TITLE, sc.CAT_CODE,
		si.INST_ID,
		s.INTRO, s.GOAL, s.TOTAL_NO, s.TOTAL_TIME, s.CREATE_DATE,
		s.COMP_TIME
		from SUBJECT s, SUBJECT_CODE sc, SUB_INSTRUCTOR si
		where
		s.SUB_CODE = sc.SUB_CODE
		and s.SUB_CODE = si.SUB_CODE
		and s.SUB_CODE =
		#{sub_code}
		)
	</select>

	<!-- 강의 공지사항 리스트 -->
	<select id="selectAllInstNotice" resultType="UserLectureDomain" parameterType="String">
		select INST_ID, TITLE, WRITE_DATE, CONTENT, STATUS as
		lec_status, SUB_CODE
		from INST_NOTICE
		where SUB_CODE=#{sub_code}
		order by
		WRITE_DATE desc
	</select>

	<!-- 강의목차 리스트 -->
	<select id="selectAllLecture" resultType="UserLectureDomain" parameterType="String">
		select LEC_CODE, TITLE as lec_title, TIME, LEC_EXPLAIN
		from LECTURE
		where SUB_CODE=#{sub_code}
		order by LEC_CODE asc
	</select>

	<!-- 강의 문의 리스트 -->
	<select id="selectAllLecQna" resultType="UserLectureDomain" parameterType="String">
		select QNA_NO, TITLE as Question_title, STD_ID as
		Q_std_id, CONTENT as Q_content, Q_DATE, SUB_CODE,
		LEC_CODE as
		Q_lec_code, STATUS as Q_status, ANS_CONTENT, ANS_DATE, INST_ID
		from
		QNA_SUB_Q
		where SUB_CODE=#{sub_code}
	</select>


	<!-- 카테고리에 따른 강의 -->
	<select id="selectCatLecture" resultType="UserLectureDomain" parameterType="String">
		SELECT SUB_CODE, STATUS, IMAGE, SUB_TITLE, CAT_CODE, INST_ID
		FROM (
		SELECT s.SUB_CODE, s.STATUS, s.IMAGE, sc.SUB_TITLE, sc.CAT_CODE,
		si.INST_ID
		FROM SUBJECT s
		JOIN SUBJECT_CODE sc ON s.SUB_CODE =
		sc.SUB_CODE
		JOIN SUB_INSTRUCTOR si ON s.SUB_CODE = si.SUB_CODE
		)
		WHERE
		<choose>
			<when test="CAT_CODE == '0'">
				sc.CAT_CODE = 'CAT_000003'
			</when>
			<when test="CAT_CODE == '1'">
				sc.CAT_CODE = 'CAT_000004'
			</when>
			<when test="CAT_CODE == '2'">
				sc.CAT_CODE = 'CAT_000005'
			</when>
			<when test="CAT_CODE == '3'">
				sc.CAT_CODE = 'CAT_000006'
			</when>
			<otherwise>
				sc.CAT_CODE = #{CAT_CODE}
			</otherwise>
		</choose>
	</select>

	<!-- 수강 신청 -->
	<select id="insertApplySub" resultType="UserApplySubVO">
	insert into  STD_SUBJECT(STD_ID, SUB_CODE, APPLY, INTEREST)
	values(#{std_id},#{sub_code},'P',null)
	</select>
	
	<!-- 관심강의 추가 -->

	<!-- 인기강의 순 리스트-->
	<select id="selectSubcodePop" resultType="UserLectureDomain">
	select
	s.SUB_CODE,s.STATUS,s.IMAGE,sc.SUB_TITLE,sc.CAT_CODE,si.INST_ID,(
	select count(*) as cnt
	from STD_SUBJECT
	where sub_code=s.sub_code ) cnt
	from
	SUBJECT s, SUBJECT_CODE sc, SUB_INSTRUCTOR si
	where
	(s.SUB_CODE=sc.SUB_CODE and s.SUB_CODE=si.SUB_CODE)
	and s.sub_code in (select sub_code
	from (select SUB_CODE,count(*) as cnt
	from STD_SUBJECT
	group by sub_code
	order by cnt desc)
	where cnt between 1 and 5)
	order by cnt desc
	</select>
	
	<!-- 신규강의 순 리스트-->
	<select id="selectLatestSub" resultType="UserLectureDomain">
	 select
	s.SUB_CODE,s.STATUS,s.IMAGE,sc.SUB_TITLE,sc.CAT_CODE,si.INST_ID,s.create_date,(
	select count(*) as cnt
	from STD_SUBJECT
	where sub_code=s.sub_code ) cnt
	from
	SUBJECT s, SUBJECT_CODE sc, SUB_INSTRUCTOR si
	where
	(s.SUB_CODE=sc.SUB_CODE and s.SUB_CODE=si.SUB_CODE)
	and s.sub_code in (select sub_code
	from (select SUB_CODE,count(*) as cnt
	from STD_SUBJECT
	group by sub_code
	order by cnt desc)
	where cnt between 1 and 3)
	order by create_date desc
	</select>


</mapper>